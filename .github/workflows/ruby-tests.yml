name: Ruby Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Test
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: install PostgreSQL client
        run: sudo apt-get -yqq install libpq-dev

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install JS dependencies
        run: yarn

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Build
        env:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          PGPASSWORD: postgres
          RAILS_ENV: test
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
          bundle exec rails db:create
          bundle exec rails db:schema:load --trace
          bundle exec rails webpacker:compile

      - name: Test
        env:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          PGPASSWORD: postgres
          PGPORT: 5432
          RAILS_ENV: test
          ADMIN_PASSWORD: testing123
          ADMIN_USERNAME: admin
          JWT_SECRET: testing123
          ORIGIN: http://localhost:3000
          ENCRYPTION_KEY: 1e29d261483d6ae089a6eab4c44423ccc9224f97f552c969acba9db66303133c
          TALKJS: ${{ secrets.TALKJS }}
          TALKJS_SECRET: ${{ secrets.TALKJS_SECRET }}
          STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: bundle exec rspec spec/system

name: Ruby Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    env:
      PGHOST: 127.0.0.1
      PGUSER: postgres
      PGPASSWORD: postgres
      PGPORT: 5432
      RAILS_ENV: test
      NODE_ENV: test
      JWT_SECRET: testing123
      ORIGIN: http://localhost:3000
      ENCRYPTION_KEY: 1e29d261483d6ae089a6eab4c44423ccc9224f97f552c969acba9db66303133c
      TALKJS: ${{ secrets.TALKJS }}
      TALKJS_SECRET: ${{ secrets.TALKJS_SECRET }}
      STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      PROJECTS_INVITE_KEY: ${{ secrets.PROJECTS_INVITE_KEY }}
      TWILIO_SID: ${{ secrets.TWILIO_SID }}
      TWILIO_API_KEY_SID: ${{ secrets.TWILIO_API_KEY_SID }}
      TWILIO_API_KEY_SECRET: ${{ secrets.TWILIO_API_KEY_SECRET }}
      TWILIO_CHAT_SERVICE_SID: ${{ secrets.TWILIO_CHAT_SERVICE_SID }}
      TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN}}
      ACCOUNTS_CREATE_KEY: testing-key
      RAILS_INBOUND_EMAIL_PASSWORD: testing123
      GUILD_REPLIES_DOMAIN: guild-replies
      RSPEC_RETRY: 3

    services:
      postgres:
        image: postgres:12
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x

      - uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: Install postgres headers
        run: sudo apt-get install libpq-dev

      - name: Cache ruby deps
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle Install
        run: |
          gem install bundler
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4 --retry 3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn Install
        run: bin/rails yarn:install

      - name: Setup database
        run: |
          bin/rails db:create
          bin/rails db:migrate

      - name: Compile assets
        run: bundle exec rails webpacker:compile

      - name: Test
        run: bundle exec rspec --format RSpec::Github::Formatter --format documentation

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v2
        with:
          project: ./spec
          browser: chrome
          headless: true
          start: bundle exec rails s -e test -p 3000
          wait-on: http://localhost:3000
          install: false

      - name: Test screenshots
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: screenshots
          path: tmp/screenshots

      - name: Cypress Video
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress_videos
          path: spec/cypress/videos/*
